/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SharingComponentStateWithContextIndexImport } from './routes/sharing-component-state-with-context/index'
import { Route as SharingComponentStateWithContextSolution2IndexImport } from './routes/sharing-component-state-with-context/solution2/index'
import { Route as SharingComponentStateWithContextSolution1IndexImport } from './routes/sharing-component-state-with-context/solution1/index'
import { Route as SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexImport } from './routes/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SharingComponentStateWithContextIndexRoute =
  SharingComponentStateWithContextIndexImport.update({
    id: '/sharing-component-state-with-context/',
    path: '/sharing-component-state-with-context/',
    getParentRoute: () => rootRoute,
  } as any)

const SharingComponentStateWithContextSolution2IndexRoute =
  SharingComponentStateWithContextSolution2IndexImport.update({
    id: '/sharing-component-state-with-context/solution2/',
    path: '/sharing-component-state-with-context/solution2/',
    getParentRoute: () => rootRoute,
  } as any)

const SharingComponentStateWithContextSolution1IndexRoute =
  SharingComponentStateWithContextSolution1IndexImport.update({
    id: '/sharing-component-state-with-context/solution1/',
    path: '/sharing-component-state-with-context/solution1/',
    getParentRoute: () => rootRoute,
  } as any)

const SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute =
  SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexImport.update(
    {
      id: '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/',
      path: '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/',
      getParentRoute: () => rootRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/sharing-component-state-with-context/': {
      id: '/sharing-component-state-with-context/'
      path: '/sharing-component-state-with-context'
      fullPath: '/sharing-component-state-with-context'
      preLoaderRoute: typeof SharingComponentStateWithContextIndexImport
      parentRoute: typeof rootRoute
    }
    '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/': {
      id: '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/'
      path: '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components'
      fullPath: '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components'
      preLoaderRoute: typeof SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/sharing-component-state-with-context/solution1/': {
      id: '/sharing-component-state-with-context/solution1/'
      path: '/sharing-component-state-with-context/solution1'
      fullPath: '/sharing-component-state-with-context/solution1'
      preLoaderRoute: typeof SharingComponentStateWithContextSolution1IndexImport
      parentRoute: typeof rootRoute
    }
    '/sharing-component-state-with-context/solution2/': {
      id: '/sharing-component-state-with-context/solution2/'
      path: '/sharing-component-state-with-context/solution2'
      fullPath: '/sharing-component-state-with-context/solution2'
      preLoaderRoute: typeof SharingComponentStateWithContextSolution2IndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sharing-component-state-with-context': typeof SharingComponentStateWithContextIndexRoute
  '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components': typeof SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute
  '/sharing-component-state-with-context/solution1': typeof SharingComponentStateWithContextSolution1IndexRoute
  '/sharing-component-state-with-context/solution2': typeof SharingComponentStateWithContextSolution2IndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sharing-component-state-with-context': typeof SharingComponentStateWithContextIndexRoute
  '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components': typeof SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute
  '/sharing-component-state-with-context/solution1': typeof SharingComponentStateWithContextSolution1IndexRoute
  '/sharing-component-state-with-context/solution2': typeof SharingComponentStateWithContextSolution2IndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/sharing-component-state-with-context/': typeof SharingComponentStateWithContextIndexRoute
  '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/': typeof SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute
  '/sharing-component-state-with-context/solution1/': typeof SharingComponentStateWithContextSolution1IndexRoute
  '/sharing-component-state-with-context/solution2/': typeof SharingComponentStateWithContextSolution2IndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sharing-component-state-with-context'
    | '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components'
    | '/sharing-component-state-with-context/solution1'
    | '/sharing-component-state-with-context/solution2'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sharing-component-state-with-context'
    | '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components'
    | '/sharing-component-state-with-context/solution1'
    | '/sharing-component-state-with-context/solution2'
  id:
    | '__root__'
    | '/'
    | '/sharing-component-state-with-context/'
    | '/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/'
    | '/sharing-component-state-with-context/solution1/'
    | '/sharing-component-state-with-context/solution2/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SharingComponentStateWithContextIndexRoute: typeof SharingComponentStateWithContextIndexRoute
  SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute: typeof SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute
  SharingComponentStateWithContextSolution1IndexRoute: typeof SharingComponentStateWithContextSolution1IndexRoute
  SharingComponentStateWithContextSolution2IndexRoute: typeof SharingComponentStateWithContextSolution2IndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SharingComponentStateWithContextIndexRoute:
    SharingComponentStateWithContextIndexRoute,
  SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute:
    SharingComponentStateWithContextCreatingCustomHooksAndProviderComponentsIndexRoute,
  SharingComponentStateWithContextSolution1IndexRoute:
    SharingComponentStateWithContextSolution1IndexRoute,
  SharingComponentStateWithContextSolution2IndexRoute:
    SharingComponentStateWithContextSolution2IndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/sharing-component-state-with-context/",
        "/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/",
        "/sharing-component-state-with-context/solution1/",
        "/sharing-component-state-with-context/solution2/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/sharing-component-state-with-context/": {
      "filePath": "sharing-component-state-with-context/index.tsx"
    },
    "/sharing-component-state-with-context/creating-custom-hooks-and-provider-components/": {
      "filePath": "sharing-component-state-with-context/creating-custom-hooks-and-provider-components/index.tsx"
    },
    "/sharing-component-state-with-context/solution1/": {
      "filePath": "sharing-component-state-with-context/solution1/index.tsx"
    },
    "/sharing-component-state-with-context/solution2/": {
      "filePath": "sharing-component-state-with-context/solution2/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
