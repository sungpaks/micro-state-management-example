import{r as c,j as r}from"./index-BnQ63Sge.js";import{E as a}from"./RenderCount-BU9gw111.js";import{c as x,d as p,e as u,C as i,a as t,b as n}from"./Counter3-DXdjYJHm.js";function l({children:e}){return[[x,{initialValue:10}],[p,{initialValue:20}],[u,{initialValue:30}]].reduceRight((s,[o,d])=>c.createElement(o,d,s),e)}function j(){return r.jsxs(r.Fragment,{children:[r.jsx(i,{}),r.jsx(i,{}),r.jsx(t,{}),r.jsx(t,{}),r.jsx(n,{}),r.jsx(n,{}),r.jsxs("p",{children:["아래와 같이 ",r.jsx("code",{children:"reduceRight"}),"을 사용하여 Provider 컴포넌트 트리를 구성합니다."]}),r.jsx("img",{src:"https://i.imgur.com/QNRZGie.png",alt:"Provider 중첩 완화 예제 코드"}),r.jsxs("p",{children:["위 예시에서는 또한 ",r.jsx("i",{children:"Higher-Order Component"}),"(",r.jsx("b",{children:"HOC"}),") 를 사용하여 DX를 향상했습니다."]}),r.jsx("img",{src:"https://i.imgur.com/tvUvdhB.png",alt:"HOC 예시"}),r.jsx("p",{children:"이제 위와 같이 Provider 중첩이 잘 완화되었습니다."})]})}const C=function(){return r.jsxs(a,{title:"Avoiding provider nesting with reduce-right",children:[r.jsxs("h1",{children:[r.jsx("code",{children:"reduceRight"}),"을 사용하여 Provider 컴포넌트 중첩을 완화합니다."]}),r.jsx(l,{children:r.jsx(j,{})})]})};export{C as component};
